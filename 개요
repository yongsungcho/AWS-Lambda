AWS Lambda 개요

1. AWS Lambda를 이용하게 되면, 서버를 구축하고 프로그램을 설치할 필요없이, AWS가 제공하는 별도의 플랫폼 위에서 손쉽게 서버를 구축해서 Data를 입력으로 받고, 처리, 출력을 할 수 있음.

2. AWS Lambda에서 코드를 몇 줄 입력하는 것만으로, 컴퓨터에서 프로그램을 직접 동작시키지 않더라도 알아서 AWS에서 함수가 자동으로 동작하게 하는 것.

3. AWS Lambda = 함수라고 생각하면 편함.
   AWS Lambda를 이용하는 것 = 함수를 작성해서 그 함수를 자동으로 동작시키도록 하는 것.

4. 어떠한 이벤트가 발생했을 때 AWS에 작성한 함수가 동작할 수 있도록 설정할 수 있음.
   이벤트의 종류
    1) 어떤 log가 발생했을 때 자동으로 그 log를 처리하기 위해서 lambda를 이용하게 함.
    2) 별도의 웹서버 처럼 운용(어떤 클라이언트의 요청이 발생했을 때 Lambda가 처리 후 반환).
    
5. AWS Lambda가 동작함에 있어서, 어떤 log나 클라이언트의 요청을 처리한 뒤에, 그 내역을 DB나 AWS의 자체 log로써 남길 수 있음.(저장 및 관리 가능)

6. AWS를 이용하는 사람들은 AWS Lambda를 유용하게 사용할 수 있음.
   이용하지 않는 사람이라도 Lambda로 손쉽게 서버 구현 가능.

7. 소스코드만 작성하고, 몇 가지 설정만 해주면 웹서버를 만들 수 있음.

8. 어떤 클라이언트가 요청했다고 가정하고, 그 요청을 Lambda로 처리하는 방법
   1) AWS 같은 경우 API Gateway를 지원해서, 이것이 별도의 웹 서버처럼 동작하게 함.
      - 구성도: 플레이어(클라이언트) -> API Gateway -> AWS Lambda <-> DB
      - 클라이언트가 접속하게되면, API Gateway가 요청을 받아서 Lambda 쪽으로 넘겨주고, Lambda에서는 함수가 동작하기 때문에 그 요청을 처리해서 DB에 담거나, 사용자에게 결과를 반환할 수 있음.
      - AWS Lambda 자체는 '함수'로서의 역할을 수행하기 때문에, 이를 실제 서버처럼 동작하도록 하기 위해서는 API Gateway를 이용해 공인 주소를 설정해야함.

9. 함수생성
   1) 권한설정
   2) Create Function
      
10. Lambda = 이용한만큼 이용 요금 부과, 하지만 매우 적게 사용할 경우 거의 요금을 내지 않음.

